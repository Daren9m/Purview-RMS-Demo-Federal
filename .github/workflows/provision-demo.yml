name: Provision Purview Demo (Federal)
on:
  workflow_dispatch:
    inputs:
      action:
        description: provision or teardown
        required: true
        default: provision
jobs:
  run:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install PowerShell modules
        shell: pwsh
        run: |
          Install-Module Microsoft.Graph -Scope CurrentUser -Force
          Install-Module ExchangeOnlineManagement -Scope CurrentUser -Force
      - name: Import certificate for app auth
        shell: pwsh
        run: |
          $bytes = [Convert]::FromBase64String("${{ secrets.M365_APP_CERT_BASE64 }}")
          $path = "$env:USERPROFILE\demoapp.pfx"
          [IO.File]::WriteAllBytes($path, $bytes)
          $pwd = (ConvertTo-SecureString "${{ secrets.M365_APP_CERT_PASSWORD }}" -AsPlainText -Force)
          Import-PfxCertificate -FilePath $path -CertStoreLocation Cert:\CurrentUser\My -Password $pwd | Out-Null
      - name: Create tenants.json from template
        shell: pwsh
        run: |
          Copy-Item config/tenants.json.template config/tenants.json
          (Get-Content config/tenants.json) |
            ForEach-Object {
              $_ -replace '00000000-0000-0000-0000-000000000000', '${{ secrets.M365_TENANT_ID }}' `
                 -replace '"AppId": ".*?"', '"AppId": "' + '${{ secrets.M365_APP_ID }}' + '"' `
                 -replace '"CertThumbprint": ".*?"', '"CertThumbprint": "' + '${{ secrets.M365_APP_CERT_THUMBPRINT }}' + '"'
            } | Set-Content config/tenants.json
      - name: Provision
        if: inputs.action == 'provision'
        shell: pwsh
        run: |
          pwsh -File .\scripts\00_Prepare-Env.ps1
          pwsh -File .\scripts\01_Seed-Users-And-Mail.ps1
          pwsh -File .\scripts\03_Provision-Teams.ps1
          pwsh -File .\scripts\05a_Create-Records-Labels.ps1
          pwsh -File .\scripts\05b_Create-Capstone-Email.ps1
          pwsh -File .\scripts\06a_Create-AutoApply-Policies.ps1
      - name: Unzip synthetic dataset
        if: inputs.action == 'provision'
        shell: pwsh
        run: |
          Expand-Archive -Path ".\synthetic-data\synthetic-content-federal-full.zip" -DestinationPath "$PWD\synthetic-content" -Force
      - name: Load synthetic content
        if: inputs.action == 'provision'
        shell: pwsh
        run: |
          pwsh -File .\scripts\08_Load-SyntheticContent.ps1 `
            -ContentRoot "$PWD\synthetic-content" `
            -TeamName "Records Demo Team" `
            -FromUpn "record.manager@contoso.com"
      - name: Teardown
        if: inputs.action == 'teardown'
        shell: pwsh
        run: |
          pwsh -File .\scripts\Teardown.ps1
